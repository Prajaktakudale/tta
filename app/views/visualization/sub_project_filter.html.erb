<%= render :file=> '/visualization/pyramid.html.erb' %>
<% if @json and flash[:no_test_error]==nil %>
  <%= render 'layouts/pyramid_partial' %>
<% end %>

<script type="text/javascript" src="../javascripts/util/templates.js"></script>
<script type="text/javascript" src="../javascripts/util/utils.js"></script>

<script type="text/javascript">
  $(document).ready(function(){
      $("#display_message").css("display","none");

      var plotPyramid = function(obj){
          var renderString="";
          var unknownTestTypes = obj.unknown_test_types;
          if(unknownTestTypes)
        {
            message = "The following Test Types are not being supported currently. <br>"
            for(var count =0;count<unknownTestTypes.length;count++){
                message+=unknownTestTypes[count]+"<br>"
            }
            message+='Please drop a mail stating the order to <a href="mailto:tta@thoughtworks.com">tta@thoughtworks.com</a>'
            $("#display_message").css("display","block");
            $("#display_message").html(message);
        }
        else
       {
           $('#pyramid-overlay').css("display","block");
           var typeOfTests = obj.test_types,
            templates = new Template(),
            legendTemplate = templates.getLegendItem(),
            legendData="<span><b>Legend: </b></span>",
            pyramidPercent=templates.getPyramidPercent(),
            pyramidDuration=templates.getPyramidDuration(),
            width = 400,
            height=400;
           renderString="<h3>Test-Pyramid for: "+ obj.sub_project_name.toUpperCase() +"</h3><br>";

      var pyramidItems = [];

      for(var index = 0, len = typeOfTests.length;index<len;index++){
          if(typeOfTests[index].percent == 0.0)
            continue;
          currentItem = {};
          currentItem.testName = typeOfTests[index].test_name.split(' ')[0].toLowerCase();
          var noOfTest = typeOfTests[index].test_no;
          currentItem.percent = typeOfTests[index].percent;
          currentItem.triangleWidth = currentItem.percent/100*width;
          currentItem.triangleHeight = height/len;

          currentItem.color = Utils.getRandomColor();

          renderString += "<div class='pyramidItem'>" + templates.render(pyramidPercent,{
            "TestTypePercent": currentItem.testName+"_percent",
            "PercentValue": typeOfTests[index].percent
          });
          renderString+="<div id=\'"+currentItem.testName+"_div\' class='trapezoid' style='width:"+currentItem.triangleWidth+"px; border-bottom-width:"+currentItem.triangleHeight+"px; border-bottom-color:"+currentItem.color+";'></div>";
          renderString += templates.render(pyramidDuration,{
            "TestTypeDuration": currentItem.testName.split(' ')[0].toLowerCase()+"_duration",
            "DurationValue": noOfTest+ " Tests run in "+ typeOfTests[index].duration
          });
          renderString+="</div>";


          legendData+=templates.render(legendTemplate,{
            "TestType": currentItem.testName,
            "TestTypeRect": currentItem.testName+"_rect",
            "TestTypeTitle": typeOfTests[index].test_name.toLowerCase()
          });
          pyramidItems.push(currentItem);
      }


        $('#legend').html(legendData);
        $('#pyramid').append(renderString);

        var bodyHeight = $('body').css('height'),
                baseTriangleHeight = parseInt(bodyHeight)/ 2;

        for(var index = 0, len = pyramidItems.length;index<len;index++){
            var currentTest = typeOfTests[index].test_name.split(' ')[0].toLowerCase();

            $("#"+pyramidItems[index].testName+"_rect").css({
                "background-color": pyramidItems[index].color
            });

            $("#"+pyramidItems[index].testName+"_percent").css({
                "left": - (pyramidItems[index].triangleWidth/2 + 200) + "px"
            });

            $("#"+pyramidItems[index].testName+"_duration").css({
                "left": (pyramidItems[index].triangleWidth/2 + 150) + "px"
            });
        }
       }
    }

    var jsonR;
    var regExp = new RegExp("&quot;",'g');
    jsonR="<%= @json %>";
    jsonR = jsonR.replace(regExp,"\"");
    jsonR=JSON.parse(jsonR);
    if(jsonR!=""){
      plotPyramid(jsonR);
    }
  });
</script>


